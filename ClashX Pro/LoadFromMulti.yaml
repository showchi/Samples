# 
# Update:2023.03.26
# ------------------
# 规则库：https://github.com/blackmatrix7/ios_rule_script/tree/master/rule/Clash
# ------------------

# HTTP 代理端口
port: 7890

# SOCKS5 代理端口
socks-port: 7891

# Linux 和 macOS 的 redir 代理端口 (如需使用此功能，请取消注释)
redir-port: 7892

# 允许局域网的连接（可用来共享代理）
allow-lan: false

# 规则模式：Global（全局代理）/ Rule（规则） / Script(腳本) / Direct（全局直连）
mode: Rule

# 设置日志输出级别 (默认级别：silent，即不输出任何内容，以避免因日志内容过大而导致程序内存溢出）。
# 5 个级别：silent / info / warning / error / debug。级别越高日志输出量越大，越倾向于调试，若需要请自行开启。
log-level: info

# clash 的 RESTful API
external-controller: '0.0.0.0:9090'


# 您可以将静态网页资源（如 clash-dashboard）放置在一个目录中，clash 将会服务于 `${API}/ui`
# 参数应填写配置目录的相对路径或绝对路径。
# external-ui: folder

# RESTful API 的口令 (可选)
secret: ""

# DNS 设置

dns:
  enable: true
  ipv6: false
  listen: 127.0.0.1:8853
  enhanced-mode: fake-ip
  nameserver:
    - https://223.5.5.5/dns-query
    - https://223.6.6.6/dns-query
    - https://doh.pub/dns-query
  fake-ip-filter:
    - "*.lan"
    - stun.*.*.*
    - stun.*.*
    - time.windows.com
    - time.nist.gov
    - time.apple.com
    - time.asia.apple.com
    - "*.ntp.org.cn"
    - "*.openwrt.pool.ntp.org"
    - time1.cloud.tencent.com
    - time.ustc.edu.cn
    - pool.ntp.org
    - ntp.ubuntu.com
    - ntp.aliyun.com
    - ntp1.aliyun.com
    - ntp2.aliyun.com
    - ntp3.aliyun.com
    - ntp4.aliyun.com
    - ntp5.aliyun.com
    - ntp6.aliyun.com
    - ntp7.aliyun.com
    - time1.aliyun.com
    - time2.aliyun.com
    - time3.aliyun.com
    - time4.aliyun.com
    - time5.aliyun.com
    - time6.aliyun.com
    - time7.aliyun.com
    - "*.time.edu.cn"
    - time1.apple.com
    - time2.apple.com
    - time3.apple.com
    - time4.apple.com
    - time5.apple.com
    - time6.apple.com
    - time7.apple.com
    - time1.google.com
    - time2.google.com
    - time3.google.com
    - time4.google.com
    - music.163.com
    - "*.music.163.com"
    - "*.126.net"
    - musicapi.taihe.com
    - music.taihe.com
    - songsearch.kugou.com
    - trackercdn.kugou.com
    - "*.kuwo.cn"
    - api-jooxtt.sanook.com
    - api.joox.com
    - joox.com
    - y.qq.com
    - "*.y.qq.com"
    - streamoc.music.tc.qq.com
    - mobileoc.music.tc.qq.com
    - isure.stream.qqmusic.qq.com
    - dl.stream.qqmusic.qq.com
    - aqqmusic.tc.qq.com
    - amobile.music.tc.qq.com
    - "*.xiami.com"
    - "*.music.migu.cn"
    - music.migu.cn
    - "*.msftconnecttest.com"
    - "*.msftncsi.com"
    - localhost.ptlogin2.qq.com
    - "*.*.*.srv.nintendo.net"
    - "*.*.stun.playstation.net"
    - xbox.*.*.microsoft.com
    - "*.ipv6.microsoft.com"
    - "*.*.xboxlive.com"
    - speedtest.cros.wr.pvp.net


# 代理组策略
proxy-groups:
  - name: Proxy
    type: select
    use:
      - 机场1
      - 机场2
    proxies:
      - HK
      - TW
      - SG
      - JP
      - US
      - DIRECT 

  - name: MATCH
    type: select
    proxies:
      - Proxy
      - HK
      - TW
      - SG
      - JP
      - US
      - DIRECT 

  - name: Apple
    type: select
    proxies:
      - Proxy
      - HK
      - TW
      - SG
      - JP
      - US
      - DIRECT 

  - name: Amazon
    type: select
    proxies:
      - Proxy
      - HK
      - TW
      - SG
      - JP
      - US
      - DIRECT 

  - name: China
    type: select
    proxies:
      - Proxy
      - HK
      - TW
      - SG
      - JP
      - US
      - DIRECT 

  - name: GitHub
    type: select
    proxies:
      - Proxy
      - HK
      - TW
      - SG
      - JP
      - US
      - DIRECT 

  - name: Google
    type: select
    proxies:
      - Proxy
      - HK
      - TW
      - SG
      - JP
      - US
      - DIRECT 

  - name: Microsoft
    type: select
    proxies:
      - Proxy
      - HK
      - TW
      - SG
      - JP
      - US
      - DIRECT 

  - name: Netflix
    type: select
    proxies:
      - Proxy
      - HK
      - TW
      - SG
      - JP
      - US
      - DIRECT 

  - name: Steam
    type: select
    proxies:
      - Proxy
      - HK
      - TW
      - SG
      - JP
      - US
      - DIRECT 

  - name: Telegram
    type: select
    proxies:
      - Proxy
      - HK
      - TW
      - SG
      - JP
      - US
      - DIRECT 

  - name: Twitter
    type: select
    proxies:
      - Proxy
      - HK
      - TW
      - SG
      - JP
      - US
      - DIRECT 

  - name: YouTube
    type: select
    proxies:
      - Proxy
      - HK
      - TW
      - SG
      - JP
      - US
      - DIRECT 

  - name: PayPal
    type: select
    proxies:
      - Proxy
      - HK
      - TW
      - SG
      - JP
      - US
      - DIRECT 

  - name: HK
    type: select
    use:
      - 机场1HK
      - 机场2HK
    proxies:
      - DIRECT

  - name: TW
    type: select
    use:
      - 机场1TW
      - 机场2TW
    proxies:
      - DIRECT

  - name: SG
    type: select
    use:
      - 机场1SG
      - 机场2SG
    proxies:
      - DIRECT

  - name: JP
    type: select
    use:
      - 机场1JP
      - 机场2JP
    proxies:
      - DIRECT

  - name: US
    type: select
    use:
      - 机场1US
      - 机场2US
    proxies:
      - DIRECT



proxy-providers:
  # 可多机场，下面以两机场为例：
  # 1、单独订阅机场1和机场2，并把机场1和机场2的config name重新设置为机场1和机场2（分区操作基于本地配置文件，方便之后的分区操作），下载配置文件到本地默认文件夹；
  # 2、在下面机场1和机场2中url中，填入机场1和机场2的订阅地址，保存；
  # 3、切换到当前配置文件；
  # 4、处理可能的分区匹配问题；

  机场1:
    type: http
    url: 机场1 Clash订阅链接
    interval: 86400
    path: ./机场1.yaml
    health-check:
      enable: true
      interval: 600
      # lazy: true
      url: http://www.gstatic.com/generate_204

  # 机场1:
  #   type: file
  #   path: ./机场1.yaml
  #   health-check:
  #     enable: true
  #     url: http://www.gstatic.com/generate_204
  #     interval: 300

  机场2:
    type: http
    url: 机场2 Clash订阅链接
    interval: 86400
    path: ./机场2.yaml
    health-check:
      enable: true
      interval: 600
      # lazy: true
      url: http://www.gstatic.com/generate_204

  机场1HK:
    type: file
    path: ./机场1.yaml
    filter: '🇭🇰|HK|香港|港|Hongkong'
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 300

  机场2HK:
    type: file
    path: ./机场2.yaml
    filter: '🇭🇰|HK|香港|港|Hongkong'
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 300

  机场1TW:
    type: file
    path: ./机场1.yaml
    filter: '台|台湾|TW|Taiwan'
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 300

  机场2TW:
    type: file
    path: ./机场2.yaml
    filter: '台|台湾|TW|Taiwan'
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 300

  机场1SG:
    type: file
    path: ./机场1.yaml
    filter: '🇸🇬|狮城|新|新加坡|SG'
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 300

  机场2SG:
    type: file
    path: ./机场2.yaml
    filter: '🇸🇬|狮城|新|新加坡|SG'
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 300

  机场1JP:
    type: file
    path: ./机场1.yaml
    filter: '🇯🇵|日|日本|东京|大阪|泉日|埼玉|沪日|深日|JP'
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 300

  机场2JP:
    type: file
    path: ./机场2.yaml
    filter: '🇯🇵|日|日本|东京|大阪|泉日|埼玉|沪日|深日|JP'
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 300

  机场1US:
    type: file
    path: ./机场1.yaml
    filter: '🇺🇸|美|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|us'
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 300
      
  机场2US:
    type: file
    path: ./机场2.yaml
    filter: '🇺🇸|美|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|us'
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 300

# 分流规则  
rules:
  - RULE-SET,AdBlock,REJECT
  - RULE-SET,Apple,Apple
  - RULE-SET,Amazon,Amazon
  - RULE-SET,GitHub,GitHub
  - RULE-SET,Google,Google
  - RULE-SET,Microsoft,Microsoft
  - RULE-SET,Netflix,Netflix 
  - RULE-SET,Steam,Steam
  - RULE-SET,Telegram,Telegram 
  - RULE-SET,Twitter,Twitter 
  - RULE-SET,YouTube,YouTube 
  - RULE-SET,PayPal,PayPal
  - RULE-SET,Proxy,Proxy
  - DOMAIN-SUFFIX,live.cn,China
  - GEOIP,CN,DIRECT
  - MATCH,MATCH

rule-providers:
  AdBlock: {type: http, behavior: classical, path: ./Filter/AdBlock, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Advertising/Advertising_Classical.yaml, interval: 3600}
  Apple: {type: http, behavior: classical, path: ./Filter/Apple, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Apple/Apple.yaml, interval: 3600}
  Amazon: {type: http, behavior: classical, path: ./Filter/Amazon, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Amazon/Amazon.yaml, interval: 3600}
  China: {type: http, behavior: classical, path: ./Filter/China, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/China/China_Classical.yaml, interval: 3600}
  GitHub: {type: http, behavior: classical, path: ./Filter/GitHub, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/GitHub/GitHub.yaml, interval: 3600}
  Google: {type: http, behavior: classical, path: ./Filter/Google, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Google/Google.yaml, interval: 3600}
  Microsoft: {type: http, behavior: classical, path: ./Filter/Microsoft, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Microsoft/Microsoft.yaml, interval: 3600}
  Netflix: {type: http, behavior: classical, path: ./Filter/Netflix, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Netflix/Netflix.yaml, interval: 3600} 
  Steam: {type: http, behavior: classical, path: ./Filter/Steam, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Steam/Steam.yaml, interval: 3600}
  Telegram: {type: http, behavior: classical, path: ./Filter/Telegram, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Telegram/Telegram.yaml, interval: 3600}
  Twitter: {type: http, behavior: classical, path: ./Filter/Twitter, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Twitter/Twitter.yaml, interval: 3600}
  YouTube: {type: http, behavior: classical, path: ./Filter/YouTube, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/YouTube/YouTube.yaml, interval: 3600}
  PayPal: {type: http, behavior: classical, path: ./Filter/PayPal, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/PayPal/PayPal.yaml, interval: 3600}
  Proxy: {type: http, behavior: classical, path: ./Filter/Proxy, url: https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Proxy/Proxy_Classical.yaml, interval: 3600}
